<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Karabiner Configuration Reference Manual on Karabiner-Elements</title>
    <link>/docs/json/</link>
    <description>Recent content in Karabiner Configuration Reference Manual on Karabiner-Elements</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="/docs/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>File locations</title>
      <link>/docs/json/location/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/location/</guid>
      <description>Karabiner-Elements configuration file paths:&#xA;~/.config/karabiner/karabiner.json Main configuration file.&#xA;Karabiner-Elements watches this file and reload it automatically when it is updated. ~/.config/karabiner/assets/complex_modifications Imported complex_modifications files.&#xA;You can use them in Karabiner-Elements Settings &amp;gt; Complex Modifications &amp;gt; Add predefined rule. Tip: file update detection and automatic reload Karabiner-Elements watches ~/.config/karabiner/karabiner.json and reloads it if updated.&#xA;The mechanism is that Karabiner-Elements watches the parent directory ~/.config/karabiner by using the File System Events API.</description>
    </item>
    <item>
      <title>Typical complex_modifications examples</title>
      <link>/docs/json/typical-complex-modifications-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/typical-complex-modifications-examples/</guid>
      <description>Swap ; and : (Equal to swap ; and shift-;)&#xA;[ { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;semicolon&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;shift&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;semicolon&amp;#34; } ] }, { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;semicolon&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;semicolon&amp;#34;, &amp;#34;modifiers&amp;#34;: [&amp;#34;left_shift&amp;#34;] } ] } ] Change control-h to delete And change control-option-h to option-delete.&#xA;{ &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;h&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;control&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;, &amp;#34;option&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;delete_or_backspace&amp;#34; } ] } Disable command-l on Finder { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;l&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;command&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;] } }, &amp;#34;conditions&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;frontmost_application_if&amp;#34;, &amp;#34;bundle_identifiers&amp;#34;: [&amp;#34;^com\\.</description>
    </item>
    <item>
      <title>complex_modifications manipulator evaluation priority</title>
      <link>/docs/json/complex-modifications-manipulator-evaluation-priority/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-evaluation-priority/</guid>
      <description>The manipulators are evaluated from the top to the bottom and the input event is manipulated only the first matched manipulator.&#xA;In other words, if there are multiple manipulators which change the same key, the manipulator placed at the top is applied and other manipulators are ignored.&#xA;Simple Modifications and Complex Modifications Simple Modifications and Complex Modifications are independent.&#xA;Thus, Simple Modifications does not affect above priority.&#xA;Karabiner-Elements changes keys by Simple Modifications, and then changes them by Complex Modifications.</description>
    </item>
    <item>
      <title>karabiner.json data structure</title>
      <link>/docs/json/root-data-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/root-data-structure/</guid>
      <description>Note Karabiner-Elements does not allow you including comments (// ... or /* ... */) in any json files. karabiner.json { &amp;#34;global&amp;#34;: { &amp;#34;check_for_updates_on_startup&amp;#34;: true, &amp;#34;show_in_menu_bar&amp;#34;: true, &amp;#34;show_profile_name_in_menu_bar&amp;#34;: false }, &amp;#34;profiles&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Profile name&amp;#34;, &amp;#34;selected&amp;#34;: true, &amp;#34;simple_modifications&amp;#34;: [ ... ], &amp;#34;fn_function_keys&amp;#34;: [ ... ], &amp;#34;complex_modifications&amp;#34;: { &amp;#34;parameters&amp;#34;: { ... }, &amp;#34;rules&amp;#34;: [ ... ] }, &amp;#34;virtual_hid_keyboard&amp;#34;: { &amp;#34;keyboard_type&amp;#34;: &amp;#34;ansi&amp;#34;, &amp;#34;caps_lock_delay_milliseconds&amp;#34;: 0 }, &amp;#34;devices&amp;#34;: [ ... ], &amp;#34;parameters&amp;#34;: { .</description>
    </item>
    <item>
      <title>External JSON generators</title>
      <link>/docs/json/external-json-generators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/external-json-generators/</guid>
      <description>Karabiner-Elements configuration generators:&#xA;GokuRakuJoudo Goku generates karabiner.json from well designed edn format file. Karabiner Complex Modification The web UI for creating json of complex modification rules. Karabiner::CompModGenerator Raku module for easily bulk generating and regenerating complex modification from pre-defined templates. Jsonnet A data templating language as a simple extension of JSON to generate config data with the benefit to organize, simplify, unify, and manage sprawling configurations. karabiner.ts Write complex modification rules in TypeScript with strong typing.</description>
    </item>
  </channel>
</rss>
