<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Conditions on Karabiner-Elements</title>
    <link>/docs/json/complex-modifications-manipulator-definition/conditions/</link>
    <description>Recent content in Conditions on Karabiner-Elements</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="/docs/json/complex-modifications-manipulator-definition/conditions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>frontmost_application_if, frontmost_application_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/frontmost-application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/frontmost-application/</guid>
      <description>Change an event if/unless the frontmost application is the specified application.&#xA;Example Change control-h key to delete_or_backspace except in Terminal.&#xA;{ &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;h&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;control&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;any&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;delete_or_backspace&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;frontmost_application_unless&amp;#34;, &amp;#34;bundle_identifiers&amp;#34;: [&amp;#34;^com\\.apple\\.Terminal$&amp;#34;] } ] } Specification { &amp;#34;type&amp;#34;: &amp;#34;frontmost_application_if&amp;#34;, &amp;#34;bundle_identifiers&amp;#34;: [ bundle identifier regex, bundle identifier regex, ... ], &amp;#34;file_paths&amp;#34;: [ file path regex, file path regex, .</description>
    </item>
    <item>
      <title>device_if, device_unless, device_exists_if, device_exists_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/device/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/device/</guid>
      <description>Change an event if/unless the event is from specified device.&#xA;Example Change 1 key to f1 if the device is Apple keyboard.&#xA;{ &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;optional&amp;#34;: [&amp;#34;any&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;f1&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;device_if&amp;#34;, &amp;#34;identifiers&amp;#34;: [ { &amp;#34;vendor_id&amp;#34;: 1452 }, { &amp;#34;vendor_id&amp;#34;: 76 } ] } ] } Specification { &amp;#34;type&amp;#34;: &amp;#34;device_if&amp;#34;, &amp;#34;identifiers&amp;#34;: [ { &amp;#34;vendor_id&amp;#34;: 1111, &amp;#34;product_id&amp;#34;: 2222, &amp;#34;description&amp;#34;: &amp;#34;my keyboard 1&amp;#34; }, { &amp;#34;vendor_id&amp;#34;: 3333, &amp;#34;product_id&amp;#34;: 4444, &amp;#34;description&amp;#34;: &amp;#34;my keyboard 2&amp;#34; }, .</description>
    </item>
    <item>
      <title>keyboard_type_if, keyboard_type_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/keyboard-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/keyboard-type/</guid>
      <description>Change an event if/unless the event is from specified type keyboard.&#xA;Example Change control-[ key to escape, including JIS layout support. (the [ key is close_bracket in JIS layout)&#xA;[ { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;open_bracket&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;control&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;escape&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;keyboard_types&amp;#34;: [&amp;#34;ansi&amp;#34;, &amp;#34;iso&amp;#34;], &amp;#34;type&amp;#34;: &amp;#34;keyboard_type_if&amp;#34; } ] }, { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;close_bracket&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;mandatory&amp;#34;: [&amp;#34;control&amp;#34;], &amp;#34;optional&amp;#34;: [&amp;#34;caps_lock&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;escape&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;keyboard_types&amp;#34;: [&amp;#34;jis&amp;#34;], &amp;#34;type&amp;#34;: &amp;#34;keyboard_type_if&amp;#34; } ] } ] Specification { &amp;#34;type&amp;#34;: &amp;#34;keyboard_type_if&amp;#34;, &amp;#34;keyboard_types&amp;#34;: [&amp;#34;ansi&amp;#34;, &amp;#34;iso&amp;#34;] } Name Required Description type Required &amp;quot;keyboard_type_if&amp;quot; or &amp;quot;keyboard_type_unless&amp;quot; keyboard_types Required An array of &amp;quot;ansi&amp;quot;, &amp;quot;iso&amp;quot; or &amp;quot;jis&amp;quot; description Optional A human-readable comment Multiple keyboard types keyboard_types are joined by &amp;ldquo;or&amp;rdquo;.</description>
    </item>
    <item>
      <title>input_source_if, input_source_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/input-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/input-source/</guid>
      <description>Change an event if/unless the current input source is the specified value.&#xA;Example Switching input source between Japanese and English at tapping the left command key.&#xA;[ { &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;left_command&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;optional&amp;#34;: [&amp;#34;any&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;left_command&amp;#34;, &amp;#34;lazy&amp;#34;: true } ], &amp;#34;to_if_alone&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;japanese_eisuu&amp;#34; } ], &amp;#34;to_if_held_down&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;left_command&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;input_sources&amp;#34;: [ { &amp;#34;language&amp;#34;: &amp;#34;ja&amp;#34; } ], &amp;#34;type&amp;#34;: &amp;#34;input_source_if&amp;#34; } ], &amp;#34;parameters&amp;#34;: { &amp;#34;basic.</description>
    </item>
    <item>
      <title>variable_if, variable_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/variable/</guid>
      <description>Change an event if/unless the variable is the specified value.&#xA;Example Change right_shift x2 to mission_control Virtual modifier Specification Tip variable_if and variable_unless are designed to use with set_variable. { &amp;#34;type&amp;#34;: &amp;#34;variable_if&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;variable name&amp;#34;, &amp;#34;value&amp;#34;: variable value } Name Required Description type Required &amp;quot;variable_if&amp;quot; or &amp;quot;variable_unless&amp;quot;. name Required Target variable name. value Required Target variable value. description Optional A human-readable comment Available types of value Type Example value Available since integer 0,1,2,&amp;hellip; Karabiner-Elements 11.</description>
    </item>
    <item>
      <title>event_changed_if, event_changed_unless</title>
      <link>/docs/json/complex-modifications-manipulator-definition/conditions/event-changed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/json/complex-modifications-manipulator-definition/conditions/event-changed/</guid>
      <description>Change an event if/unless the event is already changed by other manipulators.&#xA;Example Change tab key to return_or_enter if the tab key is the physical tab key. (If the tab key is the result of modifying another key by simple modification, the key is ignored.)&#xA;{ &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34;, &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;tab&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;optional&amp;#34;: [&amp;#34;any&amp;#34;] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;return_or_enter&amp;#34; } ], &amp;#34;conditions&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;event_changed_if&amp;#34;, &amp;#34;value&amp;#34;: false } ] } Specification { &amp;#34;type&amp;#34;: &amp;#34;event_changed_if&amp;#34;, &amp;#34;value&amp;#34;: true } Name Required Description type Required &amp;quot;event_changed_if&amp;quot; or &amp;quot;event_changed_unless&amp;quot; value Required true or false description Optional A human-readable comment Tip event_changed_unless is designed to prevent Function Keys Modifications from changing fx keys which are changed in Complex Modifications (e.</description>
    </item>
  </channel>
</rss>
